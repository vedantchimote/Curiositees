# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Curiositees-Backend-Docker-CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
#      run: mvn clean install
      run: mvn -f E:\New spring\CDAC\New\curiositees-backend\curiositees\ clean install
#      run: mvn -f /curiositees-backend/curiositees/CuriositeesWebParent/pom.xml clean install
 #     run: mvn -f E:\New spring\CDAC\New\curiositees-backend\curiositees\ clean install
#      run: mvn -f /curiositees-backend/curiositees/ clean install

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      #workflow for building and pushing docker image to docker hub
    - name: Build & push Curiositees-Backend-Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: vedantchimote/curiositees-backend
        tags: latest
        registry: docker.io
#        dockerfile: \curiositees-backend\curiositees\CuriositeesWebParent\CuriositeesBackend\Dockerfile
        dockerfile: Dockerfile
        #set the secrets in github secrets
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

      #  deploy:
      #    runs-on: ubuntu-latest
      #    needs: build
      #    steps:
      #      - name: Download Artifact from build job
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: Actions
      #      - name: Deploy to Azure App Service
      #        uses: azure/webapps-deploy@v2
      #        with:
      #          app-name: springboot-app-test
      #          publish-profile: ${{ secrets.azureWebAppPublishProfile }}
      #          package: '*.jar'

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6